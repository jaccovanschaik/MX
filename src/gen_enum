#!/bin/bash

#  Generate a "typedef enum" and a corresponding _name() routine for a list of
#  names.
# 
#  Copyright:   (c) 2005 Jacco van Schaik (jacco@jaccovanschaik.net)
#  Version:     $Id: gen_enum 224 2014-11-27 09:10:05Z jacco $
# 
#  This software is distributed under the terms of the MIT license. See
#  http://www.opensource.org/licenses/mit-license.php for details.

DoSource() {
cat << EOF
#include <stdio.h>
#include <strings.h>

#include "${lower}.h"

/* Generated on $date by $base from $input using
 * "$cmd" */

char *$e_to_s($type val)
{
   static char buf[80];

   switch(val) {
EOF

cat $input | while read x; do
   if echo "$x" | egrep '^#|^ *$' > /dev/null; then continue; fi
   printf '   case %s_%s: return("%s");\n' \
      "$prefix" "`echo "$x" | tr 'a-z_+' 'A-Z__'`" $x
done

cat << EOF
   default:
      snprintf(buf, sizeof(buf), "%d (out of range)", val);
      return(buf);
   }
}

$type $s_to_e(char *name)
{
EOF

cat $input | while read x; do
   if echo "$x" | egrep '^#|^ *$' > /dev/null; then continue; fi
   printf '   if (!strcasecmp(name, "%s")) return %s_%s;\n' \
      $x "$prefix" "`echo "$x" | tr 'a-z_+' 'A-Z__'`"
done

cat << EOF

   return -1;
}
EOF
}

DoHeader() {
cat << EOF
#ifndef ${upper}_H
#define ${upper}_H

/* Generated on $date by $base from $input using
 * "$cmd" */

typedef enum {
EOF

cat $input | while read x; do
  if echo "$x" | egrep '^#|^ *$' > /dev/null; then continue; fi
  printf '   %s_%s,\n' "$prefix" "`echo "$x" | tr 'a-z_+' 'A-Z__'`"
done

echo "   $number"

cat << EOF
} $type;

char *$e_to_s($type val);
$type $s_to_e(char *name);

#endif
EOF
}

Usage() {
   echo "Usage: $1 -c|-h <options> <text_file>"
   echo "Options:"
   echo "       -c                  output C source file"
   echo "       -h                  output C header file"
   echo "       -p <prefix>         add prefix to strings"
   echo "       -s <function_name>  enum-to-string function"
   echo "       -e <function_name>  string-to-enum function"
   echo "       -n <count_name>     name of number-of-enums value"
   echo "       -t <type_name>      name of enum typedef"

   exit $2
}

if [ $# -eq 0 ]; then
   Usage $0 0
fi

date=`date "+%Y-%m-%d %H:%M:%S"`
base=`basename $0`
cmd="$base $*"

while [ $# -gt 0 ]; do
   case "$1" in
   -c)   output=C;;
   -h)   output=H;;
   -p)   prefix=$2; shift;;
   -s)   e_to_s=$2; shift;;
   -e)   s_to_e=$2; shift;;
   -n)   number=$2; shift;;
   -t)   type=$2; shift;;
   -*)   echo "Unrecognized option $1"
         Usage $0 1;;
   *)    input=$1;;
   esac

   shift
done

lower=`basename $input .txt`
upper=`echo $lower | tr 'a-z' 'A-Z'`

if [ "$prefix" = '' ]; then prefix=${upper}; fi
if [ "$e_to_s" = '' ]; then e_to_s=${lower}_enum_to_string; fi
if [ "$s_to_e" = '' ]; then s_to_e=${lower}_string_to_enum; fi
if [ "$type"   = '' ]; then type=${lower}_enum; fi
if [ "$number" = '' ]; then number=NUM_${prefix}S; fi

if [ "$output" = H ]; then
   DoHeader $2
elif [ "$output" = C ]; then
   DoSource $2
else
   Usage $0 1
fi

exit 0
